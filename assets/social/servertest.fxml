<!--

client ui

<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.Insets?>
<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.layout.HBox?>
<?import javafx.scene.layout.VBox?>
<?import javafx.scene.text.Font?>

<AnchorPane prefHeight="500.0" prefWidth="700.0" style="-fx-background-color: #f5f5f5;" xmlns="http://javafx.com/javafx/22" xmlns:fx="http://javafx.com/fxml/1" fx:controller="lk.ijse.gdse.Controller.ClientViewController">
    <children>
        &lt;!&ndash; Header &ndash;&gt;
        <Label layoutX="33.0" layoutY="30.0" text="Client Display" textFill="#2c3e50">
            <font>
                <Font name="System Bold" size="24.0" />
            </font>
        </Label>

        &lt;!&ndash; Main Content Panel &ndash;&gt;
        <AnchorPane layoutX="31.2" layoutY="78.0" prefHeight="400.0" prefWidth="640.0" style="-fx-background-color: white; -fx-background-radius: 10; -fx-border-color: #e0e0e0; -fx-border-radius: 10; -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.1), 10, 0, 0, 10);" AnchorPane.bottomAnchor="30.0" AnchorPane.leftAnchor="30.0" AnchorPane.rightAnchor="30.0" AnchorPane.topAnchor="77.0">
            <children>
                <VBox layoutX="20.0" layoutY="20.0" prefHeight="350.0" prefWidth="600.0" spacing="15.0" AnchorPane.bottomAnchor="20.0" AnchorPane.leftAnchor="20.0" AnchorPane.rightAnchor="20.0" AnchorPane.topAnchor="20.0">
                    <children>
                        &lt;!&ndash; Chat Display Area &ndash;&gt;
                        <TextArea fx:id="txtAreaClientChatDisplay" editable="false" prefHeight="300.0" prefWidth="600.0" style="-fx-background-color: #f8f9fa; -fx-border-color: #e0e0e0; -fx-border-radius: 5;" wrapText="true" VBox.vgrow="ALWAYS">
                            <font>
                                <Font size="14.0" />
                            </font>
                        </TextArea>

                        &lt;!&ndash; Message Input and Send Button &ndash;&gt;
                        <HBox alignment="CENTER_LEFT" spacing="10.0">
                            <children>
                                <TextField fx:id="txtFieldClientMessage" prefHeight="30.0" prefWidth="376.0" promptText="Type your message here..." HBox.hgrow="ALWAYS">
                                    <font>
                                        <Font size="14.0" />
                                    </font>
                                </TextField>
                        <Button fx:id="btnUpload" mnemonicParsing="false" onAction="#btnUploadOnAction" text="Upload" />

                                <Button fx:id="btnSendClient" mnemonicParsing="false" onAction="#btnSendOnAction" prefHeight="40.0" prefWidth="80.0" style="-fx-background-color: #2c3e50; -fx-background-radius: 5;" text="Send" textFill="WHITE">
                                    <font>
                                        <Font size="14.0" />
                                    </font>
                                </Button>
                            </children>
                        </HBox>
                    </children>
                </VBox>
            </children>
            <padding>
                <Insets bottom="20.0" left="20.0" right="20.0" top="20.0" />
            </padding>
        </AnchorPane>
    </children>
</AnchorPane>-->












































































<!--
 clientController

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.stage.FileChooser;
import javafx.stage.Stage;

import java.io.*;
import java.net.Socket;
import java.net.URL;
import java.util.ResourceBundle;

public class ClientViewController implements Initializable {

@FXML
private Button btnSendClient;

@FXML
private TextArea txtAreaClientChatDisplay;

@FXML
private TextField txtFieldClientMessage;

Socket socket;
DataOutputStream dataOutputStream;
DataInputStream dataInputStream;
String message = "";

@FXML
void btnSendOnAction(ActionEvent event) throws IOException {

dataOutputStream = new DataOutputStream(socket.getOutputStream());
dataOutputStream.writeUTF(txtFieldClientMessage.getText());
dataOutputStream.flush();
txtFieldClientMessage.clear();

}

@FXML
void btnUploadOnAction(ActionEvent event) {

}

@Override
public void initialize(URL url, ResourceBundle resourceBundle) {

Thread thread = new Thread(() -> {
try {
socket = new Socket("localhost", 5000);
dataInputStream = new DataInputStream(socket.getInputStream());

while (!message.equals("end")) {
message = dataInputStream.readUTF();
txtAreaClientChatDisplay.appendText(message + "\n");
}

} catch (IOException e) {
throw new RuntimeException(e);
}
});
thread.start();

}
}

-->












<!--

Main

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;


public class Main extends Application {

public static void main(String[] args) {
launch(args);
}

@Override
public void start(Stage stage) throws Exception {
Parent load =  FXMLLoader.load(getClass().getResource("/view/serverView.fxml"));
Scene scene = new Scene(load);

stage.setScene(scene);
stage.setTitle("Server Form");
stage.setResizable(false);
stage.show();

Parent load1 =  FXMLLoader.load(getClass().getResource("/view/clientView.fxml"));
Scene scene1 = new Scene(load1);

Stage stage1 = new Stage();
stage1.setScene(scene1);
stage1.setTitle("Client Form");
stage1.setResizable(false);
stage1.show();
}
}

-->










<!--

serverController

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.stage.FileChooser;
import javafx.stage.Stage;

import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.URL;
import java.util.ResourceBundle;

public class ServerViewController implements Initializable {

@FXML
private Button btnSendSever;

@FXML
private TextArea txtAreaServerChatDisplay;

@FXML
private TextField txtFieldServerMessage;

ServerSocket serverSocket;
Socket socket;
DataInputStream dataInputStream;
DataOutputStream dataOutputStream;
String message = "";

@FXML
void btnSendOnAction(ActionEvent event) throws IOException {

dataOutputStream = new DataOutputStream(socket.getOutputStream());
dataOutputStream.writeUTF(txtFieldServerMessage.getText());
dataOutputStream.flush();
txtFieldServerMessage.clear();

}

@Override
public void initialize(URL url, ResourceBundle resourceBundle) {

Thread thread = new Thread(() -> {
try {
serverSocket = new ServerSocket(5000);
txtAreaServerChatDisplay.appendText("Server Started. \n");
socket = serverSocket.accept();
txtAreaServerChatDisplay.appendText("Client Connected. \n");

dataInputStream = new DataInputStream(socket.getInputStream());

while (!message.equals("end")) {
message = dataInputStream.readUTF();
txtAreaServerChatDisplay.appendText(message + "\n");
}

} catch (IOException e) {
throw new RuntimeException(e);
}
});
thread.start();

}
}

-->



<!--

server ui

<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.Insets?>
<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.layout.HBox?>
<?import javafx.scene.layout.VBox?>
<?import javafx.scene.text.Font?>

<AnchorPane prefHeight="500.0" prefWidth="700.0" style="-fx-background-color: #f5f5f5;" xmlns="http://javafx.com/javafx/22" xmlns:fx="http://javafx.com/fxml/1" fx:controller="lk.ijse.gdse.Controller.ServerViewController">
<children>
&lt;!&ndash; Header &ndash;&gt;
<Label layoutX="33.0" layoutY="30.0" text="Server Display" textFill="#2c3e50">
<font>
    <Font name="System Bold" size="24.0" />
</font>
</Label>

&lt;!&ndash; Main Content Panel &ndash;&gt;
<AnchorPane layoutX="31.2" layoutY="78.0" prefHeight="400.0" prefWidth="640.0" style="-fx-background-color: white; -fx-background-radius: 10; -fx-border-color: #e0e0e0; -fx-border-radius: 10; -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.1), 10, 0, 0, 10);" AnchorPane.bottomAnchor="30.0" AnchorPane.leftAnchor="30.0" AnchorPane.rightAnchor="30.0" AnchorPane.topAnchor="77.0">
<children>
    <VBox layoutX="20.0" layoutY="20.0" prefHeight="350.0" prefWidth="600.0" spacing="15.0" AnchorPane.bottomAnchor="20.0" AnchorPane.leftAnchor="20.0" AnchorPane.rightAnchor="20.0" AnchorPane.topAnchor="20.0">
        <children>
            &lt;!&ndash; Chat Display Area &ndash;&gt;
            <TextArea fx:id="txtAreaServerChatDisplay" editable="false" prefHeight="300.0" prefWidth="600.0" style="-fx-background-color: #f8f9fa; -fx-border-color: #e0e0e0; -fx-border-radius: 5;" wrapText="true" VBox.vgrow="ALWAYS">
                <font>
                    <Font size="14.0" />
                </font>
            </TextArea>

            &lt;!&ndash; Message Input and Send Button &ndash;&gt;
            <HBox alignment="CENTER_LEFT" spacing="10.0">
                <children>
                    <TextField fx:id="txtFieldServerMessage" prefHeight="40.0" promptText="Type your message here..." HBox.hgrow="ALWAYS">
                        <font>
                            <Font size="14.0" />
                        </font>
                    </TextField>

                    <Button fx:id="btnSendSever" mnemonicParsing="false" onAction="#btnSendOnAction" prefHeight="40.0" prefWidth="80.0" style="-fx-background-color: #2c3e50; -fx-background-radius: 5;" text="Send" textFill="WHITE">
                        <font>
                            <Font size="14.0" />
                        </font>
                    </Button>
                </children>
            </HBox>
        </children>
    </VBox>
</children>
<padding>
    <Insets bottom="20.0" left="20.0" right="20.0" top="20.0" />
</padding>
</AnchorPane>
</children>
</AnchorPane>
